"use strict";(self.webpackChunksf_documentation=self.webpackChunksf_documentation||[]).push([[5735],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),c=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(a.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,a=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=c(r),d=o,g=f["".concat(a,".").concat(d)]||f[d]||p[d]||s;return r?n.createElement(g,l(l({ref:t},u),{},{components:r})):n.createElement(g,l({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,l=new Array(s);l[0]=f;var i={};for(var a in t)hasOwnProperty.call(t,a)&&(i[a]=t[a]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<s;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},6581:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return a},metadata:function(){return c},toc:function(){return u},default:function(){return f}});var n=r(7462),o=r(3366),s=(r(7294),r(3905)),l=["components"],i={},a="Using sfPoller to monitor Postgres database",c={unversionedId:"Integrations/postgres/postgres_sfpoller",id:"Integrations/postgres/postgres_sfpoller",isDocsHomePage:!1,title:"Using sfPoller to monitor Postgres database",description:"Overview",source:"@site/docs/Integrations/postgres/postgres_sfpoller.md",sourceDirName:"Integrations/postgres",slug:"/Integrations/postgres/postgres_sfpoller",permalink:"/docs/Integrations/postgres/postgres_sfpoller",editUrl:"https://github.com/ram-dot-kumar/SFwebsite.git/docs/Integrations/postgres/postgres_sfpoller.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Postgres in Kubernetes",permalink:"/docs/Integrations/postgres/postgres_kubernetes"},next:{title:"overview",permalink:"/docs/Integrations/mysql/overview"}},u=[{value:"Overview",id:"overview",children:[]},{value:"Typical use cases",id:"typical-use-cases",children:[]},{value:"Postgres monitoring with sfPoller",id:"postgres-monitoring-with-sfpoller",children:[]}],p={toc:u};function f(e){var t=e.components,r=(0,o.Z)(e,l);return(0,s.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"using-sfpoller-to-monitor-postgres-database"},"Using sfPoller to monitor Postgres database"),(0,s.kt)("h2",{id:"overview"},"Overview"),(0,s.kt)("p",null,"sfPoller is a powerful and extremely useful component of SnappyFlow and when used in conjunction with sfAgent and sfPod, allow users to reach all interfaces of an application that need to be monitored."),(0,s.kt)("h2",{id:"typical-use-cases"},"Typical use cases"),(0,s.kt)("p",null,"sfPoller is especially useful in monitoring Cloud Services such as ELB, S3, RDS etc. It includes plugins for most commonly used cloud components. Plugins connect to cloud accounts, discover inventory and collect static & dynamic parameters using Public cloud APIs, Cloudwatch and Azure Monitor."),(0,s.kt)("h2",{id:"postgres-monitoring-with-sfpoller"},"Postgres monitoring with sfPoller"),(0,s.kt)("p",null,"The video below explains the steps involved in setting up sfPoller to monitor a Postgres database running on AWS."),(0,s.kt)("iframe",{title:"sfPoller Setup",width:"570",height:"321",src:"https://www.youtube.com/embed/vTs7JVLND1I",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:"allowFullScreen",mozallowfullscreen:"mozallowfullscreen",msallowfullscreen:"msallowfullscreen",oallowfullscreen:"oallowfullscreen",webkitallowfullscreen:"webkitallowfullscreen"}))}f.isMDXComponent=!0}}]);