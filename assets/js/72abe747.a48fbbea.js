"use strict";(self.webpackChunksf_documentation=self.webpackChunksf_documentation||[]).push([[5426],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=c(n),d=o,m=f["".concat(u,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3943:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return l},default:function(){return f}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={},u="Overview",c={unversionedId:"Integrations/kubernetes/overview",id:"Integrations/kubernetes/overview",isDocsHomePage:!1,title:"Overview",description:"SnappyFlow provides various approaches to monitor Kubernetes applications. Choose one to continue",source:"@site/docs/Integrations/kubernetes/overview.md",sourceDirName:"Integrations/kubernetes",slug:"/Integrations/kubernetes/overview",permalink:"/docs/Integrations/kubernetes/overview",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/Integrations/kubernetes/overview.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Monitoring Nginx on Kubernetes",permalink:"/docs/Integrations/nginx/nginx_kubernetes"},next:{title:"Kubernetes Monitoring with sfPod",permalink:"/docs/Integrations/kubernetes/kubernetes_monitoring_with_sfPod"}},l=[],p={toc:l};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"overview"},"Overview"),(0,i.kt)("p",null,"SnappyFlow provides various approaches to monitor Kubernetes applications. Choose one to continue"),(0,i.kt)("h5",{id:"sfpod"},(0,i.kt)("a",{parentName:"h5",href:"/docs/Integrations/kubernetes/kubernetes_monitoring_with_sfPod"},"sfPod")),(0,i.kt)("p",null,"sfPod is a collector that is installed on Kubernetes and runs as a DaemonSet on each worker node."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Host, Pod & Container metrics"),(0,i.kt)("li",{parentName:"ul"},"Resources such as deployments, Daemon Sets etc."),(0,i.kt)("li",{parentName:"ul"},"Kubernetes core services metrics"),(0,i.kt)("li",{parentName:"ul"},"Cluster logs"),(0,i.kt)("li",{parentName:"ul"},"Monitor Prometheus exporters running on any of the application pods")),(0,i.kt)("h5",{id:"sfkubeagent"},(0,i.kt)("a",{parentName:"h5",href:"/docs/Integrations/kubernetes/sfkubeagent_installation"},"sfKubeAgent")),(0,i.kt)("p",null,"sfKubeAgent is sfAgent packaged as a container and run as a sidecar within a Kubernetes application pod. It can be configured to collect both application metrics and logs similar to the way sfAgent does."),(0,i.kt)("h5",{id:"prometheus-integration"},(0,i.kt)("a",{parentName:"h5",href:"/docs/Integrations/kubernetes/prometheus_exporter"},"Prometheus Integration")),(0,i.kt)("h5",{id:"centralized-logging"},(0,i.kt)("a",{parentName:"h5",href:"/docs/Integrations/kubernetes/centralized_logging_of_application_pod_logs"},"Centralized Logging")))}f.isMDXComponent=!0}}]);