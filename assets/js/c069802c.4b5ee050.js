"use strict";(self.webpackChunksf_documentation=self.webpackChunksf_documentation||[]).push([[5988],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2101:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={},s="Monitoring MongoDB",p={unversionedId:"Integrations/mongodb",id:"Integrations/mongodb",isDocsHomePage:!1,title:"Monitoring MongoDB",description:"Overview",source:"@site/docs/Integrations/mongodb.md",sourceDirName:"Integrations",slug:"/Integrations/mongodb",permalink:"/docs/Integrations/mongodb",editUrl:"https://github.com/ram-dot-kumar/SFwebsite.git/docs/Integrations/mongodb.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Monitoring Apache ZooKeeper running on Instances",permalink:"/docs/Integrations/zookeeper"},next:{title:"Redis",permalink:"/docs/Integrations/redis"}},c=[{value:"Overview",id:"overview",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"See Also",id:"see-also",children:[]}],m={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"monitoring-mongodb"},"Monitoring MongoDB"),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"MongoDB plugin is an sfAgent plugin used to collect mongodb metrics. It uses serverStatus, dbstats command to retrieve the statistics. In that it collects the metrics like number of collections in db, number of insert , delete, update operations, read latency, write latency and other DB stats."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"sfAgent requires access to MongoDB system tables to collect metrics. This will require adding user credentials to sfAgent plugin configuration.  User role and credentials can be created with the procedure mentioned below"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Open ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/mongod.conf")," file and comment security config if it exists. This is needed to make changes to config file and will be uncommented in subsequent step"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"}," #security: \n          #authorization: enabled\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Start mongodb service with command ",(0,o.kt)("inlineCode",{parentName:"p"},"service mongod start"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Check mongodb status is active using command ",(0,o.kt)("inlineCode",{parentName:"p"},"service mongod status"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Create ",(0,o.kt)("inlineCode",{parentName:"p"},"mongostatRole")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"listDatabases")," roles"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Use admin")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Execute the command below"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sql"},'db.createRole(\n   {\n           role: "mongostatRole",\n           privileges: [\n           { resource: { cluster: true }, \n             actions: [ "serverStatus" ] }],\n           roles: []\n   })\n\ndb.createRole(\n    {\n            role: "listDatabases",\n            privileges: [\n            { resource: { cluster: true }, \n            actions: [ "listDatabases" ] }],\n            roles: []\n        })\n')))))))),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Create new user with ",(0,o.kt)("inlineCode",{parentName:"p"},"clusterMonitor")," , ",(0,o.kt)("inlineCode",{parentName:"p"},"mongostatRole")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"listDatabases")," roles"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-sql"},'db.createUser( { user:"Newuser", pwd: "pass",\n               roles : [\n                   { role : "mongostatRole", db : "admin"  },\n                   { role : "listDatabases", db :"admin" },\n                   { role : "clusterMonitor", db : "admin" }           \n           ] } )\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Exit mongo using ",(0,o.kt)("inlineCode",{parentName:"p"},"exit")," command.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Open ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/mongod.conf")," file and uncomment security config if exists else add the    config."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"security:\n             authorization: enabled\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Restart mongodb using command ",(0,o.kt)("inlineCode",{parentName:"p"},"service mongod restart")," ")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Use the created mongo user credentials in sfagent config and start sfagent."))),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"sfAgent section provides steps to install and automatically generate plugin configurations.  User can also manually add the configuration shown below to ",(0,o.kt)("inlineCode",{parentName:"p"},"config.yaml")," under ",(0,o.kt)("inlineCode",{parentName:"p"},"/opt/sfagent/")," directory"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"key: <Profile_key>\ntags:\n  Name: <instance_name>\n  appName: <app_name>\n  projectName: <project_name>\nmetrics:\n  plugins:\n    - name: mongodb\n      enabled: true\n      interval: 300\n      config:\n        port: 27017\n        host: localhost\n        username: Newuser\n        password: pass\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Viewing data and dashboards")),(0,o.kt)("p",null,"Data collected by plugins can be viewed in SnappyFlow\u2019s browse data section "),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Metrics")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"plugin"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"mongodb")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"documentType"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"dbStats"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"systemInfo"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"operationalMetrics")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Dashboard template"),": ")),(0,o.kt)("h2",{id:"see-also"},"See Also"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/integrations/mysql/overview"},"MySQL")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/integrations/postgres/overview"},"PostgresDB")))}u.isMDXComponent=!0}}]);