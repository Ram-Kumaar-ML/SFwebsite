"use strict";(self.webpackChunksf_documentation=self.webpackChunksf_documentation||[]).push([[9920],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,g=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7709:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={},s="PSUtil Monitoring",p={unversionedId:"Integrations/os/linux/psutil",id:"Integrations/os/linux/psutil",isDocsHomePage:!1,title:"PSUtil Monitoring",description:"Overview",source:"@site/docs/Integrations/os/linux/psutil.md",sourceDirName:"Integrations/os/linux",slug:"/Integrations/os/linux/psutil",permalink:"/docs/Integrations/os/linux/psutil",editUrl:"https://github.com/ram-dot-kumar/SFwebsite.git/docs/Integrations/os/linux/psutil.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"NetStat Monitoring",permalink:"/docs/Integrations/os/linux/netstat"},next:{title:"LSOF (List of Open Files)",permalink:"/docs/Integrations/os/linux/lsof"}},u=[{value:"Overview",id:"overview",children:[]},{value:"Agent Configuration",id:"agent-configuration",children:[{value:"Configuring parameters",id:"configuring-parameters",children:[]}]},{value:"Viewing data and dashboards",id:"viewing-data-and-dashboards",children:[]},{value:"Test Matrix",id:"test-matrix",children:[]},{value:"See Also",id:"see-also",children:[]}],c={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"psutil-monitoring"},"PSUtil Monitoring"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"PSUtil Metric plugin is an agent-based plugin that collects below data for each process running on the machine"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Process ID"),(0,i.kt)("li",{parentName:"ul"},"Username"),(0,i.kt)("li",{parentName:"ul"},"CPU (%)"),(0,i.kt)("li",{parentName:"ul"},"CPU time"),(0,i.kt)("li",{parentName:"ul"},"Memory (%)"),(0,i.kt)("li",{parentName:"ul"},"Resident Memory (%)"),(0,i.kt)("li",{parentName:"ul"},"Virtual Memory (%)"),(0,i.kt)("li",{parentName:"ul"},"Elapsed time"),(0,i.kt)("li",{parentName:"ul"},"Processor"),(0,i.kt)("li",{parentName:"ul"},"State Code")),(0,i.kt)("h2",{id:"agent-configuration"},"Agent Configuration"),(0,i.kt)("p",null,"Refer to ",(0,i.kt)("a",{parentName:"p",href:"/docs/Quick_Start/getting_started#sfagent"},"sfAgent")," section for steps to install and automatically generate plugin configurations. User can also manually add the configuration shown below to ",(0,i.kt)("inlineCode",{parentName:"p"},"config.yaml")," under ",(0,i.kt)("inlineCode",{parentName:"p"},"/opt/sfagent/")," directory "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"key: <profile_key> \ntags: \n  Name: <name> \n  appName: <app_name> \n  projectName: <project_name> \nmetrics: \n  plugins: \n    -name:psutil \n     enabled:true \n     interval:60 \n     config: \n       numprocess:10 \n       sortby:pcpu \n")),(0,i.kt)("h3",{id:"configuring-parameters"},"Configuring parameters"),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can configure plugin to collect top 10 process which used High CPU (%) as in sample configuration. "))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"numprocess"),": Number of processes for which metrics have to be collected. Set ",(0,i.kt)("inlineCode",{parentName:"p"},"numprocess")," to 0 or leave it empty to get metrics for all processes. Default is 15.\u202f ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"sortby"),": Sorts the process by ",(0,i.kt)("inlineCode",{parentName:"p"},"sortby")," field and selects the top N processes. Default value is pcpu. E.g. you can collect top 10 processes by CPU Util if the sortby field is pcpu. Possible values are,"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"uname   - Username \npid     - ProcessId \npsr     - Processor \npcpu    - CPUPercent \ncputime - CPUTime \npmem    - Memory Percent \nrsz     - Resident Memory \nvsz     - Virtual Memory \netime   - Elapsed Time \ns       - State code \n")))),(0,i.kt)("h2",{id:"viewing-data-and-dashboards"},"Viewing data and dashboards"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Data collected by plugin can be viewed in SnappyFlow\u2019s browse data section under metrics ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"plugin= psuti"),"  "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"documentType = processStats")," "))),(0,i.kt)("li",{parentName:"ul"},"Dashboard of psutil data can be rendered using ",(0,i.kt)("inlineCode",{parentName:"li"},"Template= PSUTIL")," ")),(0,i.kt)("h2",{id:"test-matrix"},"Test Matrix"),(0,i.kt)("p",null,"Centos: 7.x "),(0,i.kt)("p",null,"RHEL: 7.x "),(0,i.kt)("p",null,"Ubuntu: 14.x, 16.x "),(0,i.kt)("h2",{id:"see-also"},"See Also"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/integrations/os/linux/linux_os"},"Linux monitoring")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/integrations/os/linux/lsof"},"LSOF")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/integrations/os/linux/netstat"},"NETSTAT")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/integrations/statsd/custom_monitoring"},"Custom plugins using StatsD")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/Integrations/kubernetes/prometheus_exporter"},"Prometheus Integration"))))}m.isMDXComponent=!0}}]);