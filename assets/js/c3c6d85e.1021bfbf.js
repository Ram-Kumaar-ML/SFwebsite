"use strict";(self.webpackChunksf_documentation=self.webpackChunksf_documentation||[]).push([[6425],{3905:function(e,n,a){a.d(n,{Zo:function(){return p},kt:function(){return d}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=t.createContext({}),m=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},p=function(e){var n=m(e.components);return t.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=m(a),d=r,y=u["".concat(s,".").concat(d)]||u[d]||c[d]||o;return a?t.createElement(y,i(i({ref:n},p),{},{components:a})):t.createElement(y,i({ref:n},p))}));function d(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var m=2;m<o;m++)i[m]=a[m];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2680:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return m},toc:function(){return p},default:function(){return u}});var t=a(7462),r=a(3366),o=(a(7294),a(3905)),i=["components"],l={},s="MySQL on Kubernetes",m={unversionedId:"Integrations/mysql/mysql_kubernetes",id:"Integrations/mysql/mysql_kubernetes",isDocsHomePage:!1,title:"MySQL on Kubernetes",description:"MySQL\u202frunning\u202fin\u202fKubernetes\u202fcan\u202fbe\u202fmonitored\u202fin\u202fSnappyFlow\u202fusing\u202ftwo\u202fapproaches:",source:"@site/docs/Integrations/mysql/mysql_kubernetes.md",sourceDirName:"Integrations/mysql",slug:"/Integrations/mysql/mysql_kubernetes",permalink:"/docs/Integrations/mysql/mysql_kubernetes",editUrl:"https://github.com/ram-dot-kumar/SFwebsite.git/docs/Integrations/mysql/mysql_kubernetes.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MySQL on Instances",permalink:"/docs/Integrations/mysql/mysql_instances"},next:{title:"Monitoring Apache on Instances",permalink:"/docs/Integrations/apache/overview"}},p=[{value:"MySQL monitoring with sfKubeAgent",id:"mysql-monitoring-with-sfkubeagent",children:[{value:"Config map for MySQL",id:"config-map-for-mysql",children:[]},{value:"Config map for\u202fMySQL\u202fsfKubeAgent",id:"config-map-formysqlsfkubeagent",children:[]},{value:"MySQL Pod YAML",id:"mysql-pod-yaml",children:[]},{value:"Viewing data and dashboards",id:"viewing-data-and-dashboards",children:[]}]},{value:"MySQL monitoring with Prometheus",id:"mysql-monitoring-with-prometheus",children:[{value:"Pre-requisites",id:"pre-requisites",children:[]},{value:"Configurations",id:"configurations",children:[]},{value:"MySQL Service YAML",id:"mysql-service-yaml",children:[]},{value:"MySQL Pod YAML",id:"mysql-pod-yaml-1",children:[]},{value:"Viewing data and dashboards",id:"viewing-data-and-dashboards-1",children:[]}]}],c={toc:p};function u(e){var n=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"mysql-on-kubernetes"},"MySQL on Kubernetes"),(0,o.kt)("p",null,"MySQL\u202frunning\u202fin\u202fKubernetes\u202fcan\u202fbe\u202fmonitored\u202fin\u202fSnappyFlow\u202fusing\u202ftwo\u202fapproaches:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Integrations/kubernetes/sfkubeagent_installation"},"sfKubeAgent")," as\u202fsidecar\u202fcontainer."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/Integrations/kubernetes/prometheus_exporter"},"Prometheus\u202fexporter"))),(0,o.kt)("h2",{id:"mysql-monitoring-with-sfkubeagent"},"MySQL monitoring with sfKubeAgent"),(0,o.kt)("p",null,"In this approach, sfKubeAgent is run as a side-car inside MySQL pod. The example below shows the config-map for sfKubeAgent container, config-map for MySQL container and pod yaml."),(0,o.kt)("h3",{id:"config-map-for-mysql"},"Config map for MySQL"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\u202f \nkind:\u202fConfigMap\u202f \nmetadata:\u202f \n\u202f name:\u202fmysql-configmap\u202f \ndata:\u202f \n\u202f\u202fmysql.cnf: |\u202f \n\u202f\u202f\u202f [mysqld]\u202f \n\u202f\u202f\u202f show_compatibility_56 = On\u202f \n\u202f\u202f\u202f\u202fquery_cache_type\u202f= 1\u202f \n\u202f\u202f\u202f\u202fquery_cache_size\u202f= 16M\u202f \n\u202f\u202f\u202f\u202fquery_cache_limit\u202f= 1M\u202f \n\u202f\u202f\u202f\u202fgeneral_log_file\u202f= /var/log/mysql/mysql.log\u202f \n\u202f\u202f\u202f\u202fgeneral_log\u202f= 1\u202f \n\u202f\u202f\u202f\u202fslow_query_log\u202f= 1\u202f \n\u202f\u202f\u202f\u202fslow_query_log_file\u202f= /var/log/mysql/mysql-slow.log\u202f \n")),(0,o.kt)("h3",{id:"config-map-formysqlsfkubeagent"},"Config map for\u202fMySQL\u202fsfKubeAgent"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: mysql-sfkubeagent-configmap\ndata:\n  config.yaml: |-\n    key: <enter profile key> \n    metrics: \n        plugins: \n        - name: mysql \n          enabled: true \n          interval: 30 \n          config: \n            host: "127.0.0.1" \n            password: "<enter password>" \n            user: "root" \n            documentsTypes: \n            - databaseDetails \n            - serverDetails \n            - tableDetails \n    logging: \n        plugins: \n        - name: mysql-general \n          enabled: true \n          config: \n            log_path: "/var/log/mysql/mysql.log, /var/log/mysql.log, /var/log/mysqld.log" \n        - name: mysql-error \n          enabled: true \n          config: \n            log_level: \n            - error \n            - warn \n            - note \n            log_path: "/var/log/mysql/error.log, /var/log/mysql/mysql-error.log, /var/log/mysqld.err" \n        - name: mysql-slowquery \n          enabled: true \n          config: \n            log_path: "/var/lib/mysql/ip-*slow.log, /var/log/mysql/mysql-slow.log"\n')),(0,o.kt)("h3",{id:"mysql-pod-yaml"},"MySQL Pod YAML"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'kind: Pod\napiVersion: v1\nmetadata:\n  name: mysql-pod\n  labels:\n    snappyflow/appname: <app_name>\n    snappyflow/projectname: <project_name>\nspec:\n  containers:\n    - name: mysql-container\n      image: "mysql:5.7.14"\n      imagePullPolicy: IfNotPresent\n      ports:\n        - name: tcp\n          containerPort: 3306\n      env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: <enter password>\n        - name: MYSQL_ROOT_USER\n          value: root\n      volumeMounts:\n        - name: varlog\n          mountPath: /var/log/mysql\n        - name: configmap-mysql\n          mountPath: /etc/mysql/conf.d\n    # Snappyflow\'s sfkubeagent container\n    - name: sfagent-container\n      image: snappyflowml/sfagent:latest\n      imagePullPolicy: Always\n      command:\n        - /app/sfagent\n        - -enable-console-log\n      env:\n        - name: APP_NAME\n          value: <app_name>\n        - name: PROJECT_NAME\n          value: <project_name>\n      volumeMounts:\n        - name: configmap-sfkubeagent-mysql\n          mountPath: /opt/sfagent/config.yaml\n          subPath: config.yaml\n        - name: varlog\n          mountPath: /var/log/mysql\n  volumes:\n    - name: configmap-mysql\n      configMap:\n        name: mysql-configmap\n    - name: configmap-sfkubeagent-mysql\n      configMap:\n        name: mysql-sfkubeagent-configmap\n    - name: varlog\n      emptyDir: {}\n')),(0,o.kt)("h3",{id:"viewing-data-and-dashboards"},"Viewing data and dashboards"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Metric data generated by plugin can be viewed in ",(0,o.kt)("inlineCode",{parentName:"li"},"browse data")," page inside the respective application under metrics section with ",(0,o.kt)("inlineCode",{parentName:"li"},"plugin=mysql")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"documentType=")," ",(0,o.kt)("inlineCode",{parentName:"li"},"serverDetails"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"databaseDetails"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"tableDetails"),". Data from slow query logs can be found in metrics section with ",(0,o.kt)("inlineCode",{parentName:"li"},"plugin=mysql-slowquery")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"documentType=SlowQueryLogs")),(0,o.kt)("li",{parentName:"ul"},"Dashboard for this data can be instantiated by Importing dashboard template ",(0,o.kt)("inlineCode",{parentName:"li"},"MySQL")," to the application dashboard")),(0,o.kt)("h2",{id:"mysql-monitoring-with-prometheus"},"MySQL monitoring with Prometheus"),(0,o.kt)("p",null,"Refer to ",(0,o.kt)("a",{parentName:"p",href:"/docs/Integrations/kubernetes/prometheus_exporter"},"Prometheus Exporter")," overview to understand how SnappyFlow monitors using Prometheus exporters."),(0,o.kt)("h3",{id:"pre-requisites"},"Pre-requisites"),(0,o.kt)("p",null,"Prometheus exporter is deployed as a side-car in the application container and the exporter port is accessible to sfPod"),(0,o.kt)("h3",{id:"configurations"},"Configurations"),(0,o.kt)("h3",{id:"mysql-service-yaml"},"MySQL Service YAML"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1 \nkind: Service \nmetadata: \n  labels: \n   snappyflow/appname: <app_name> \n   snappyflow/projectname: <project_name> \n   snappyflow/component: mysql \n  name: mysql-prom-service \nspec: \n  ports: \n  - name: mysql \n    port: 3306 \n    protocol: TCP \n    targetPort: mysql \n  - name: mysql-exporter \n    port: 9104 \n    protocol: TCP \n    targetPort: mysql-exporter \n  selector: \n    app: <app_name> \n  sessionAffinity: None \n  type: ClusterIP \n")),(0,o.kt)("h3",{id:"mysql-pod-yaml-1"},"MySQL Pod YAML"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'kind: Pod \napiVersion: v1 \nmetadata: \n name: mysql-prometheus-pod \n labels: \n  snappyflow/appname: <app-name> \n  snappyflow/projectname: <project-name> \n  snappyflow/component: mysql \nspec: \n containers: \n - name: mysql-container \n   image: "mysql:5.7.14" \n   imagePullPolicy: IfNotPresent \n   ports: \n   - name: tcp \n     containerPort: 3306 \n   env: \n   - name: MYSQL_ROOT_PASSWORD \n     value: <password> \n   - name: MYSQL_ROOT_USER \n     value: root \n   volumeMounts: \n     - name: varlog \n       mountPath: /var/log/mysql \n     - name: configmap-mysql \n       mountPath: /etc/mysql/conf.d \n # Prometheus exporter \n - name: mysql-exporter \n   image: prom/mysqld-exporter:v0.10.0 \n   imagePullPolicy: Always \n   ports: \n   - name: mysql-exporter \n     containerPort: 9104 \n   command: \n     - sh \n     - -c \n     - DATA_SOURCE_NAME="root:$MYSQL_ROOT_PASSWORD@(localhost:3306)/" /bin/mysqld_exporter \n   env: \n     - name: MYSQL_ROOT_PASSWORD \n       value: <password> \n volumes: \n - name: configmap-mysql \n   configMap: \n     name: mysql-configmap \n - name: varlog \n   emptyDir: {} \n')),(0,o.kt)("h3",{id:"viewing-data-and-dashboards-1"},"Viewing data and dashboards"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Data generated by plugin can be viewed in ",(0,o.kt)("inlineCode",{parentName:"li"},"browse data")," page inside the respective application under ",(0,o.kt)("inlineCode",{parentName:"li"},"plugin=kube-prom-mysql")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"documentType=")," ",(0,o.kt)("inlineCode",{parentName:"li"},"serverDetails"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"tabledetails")," . Data from slow query logs can be found in metrics section with ",(0,o.kt)("inlineCode",{parentName:"li"},"plugin=mysql-slowquery")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"documentType=mysqlSlowQueryLogs")),(0,o.kt)("li",{parentName:"ul"},"Dashboard for this data can be instantiated by Importing dashboard template ",(0,o.kt)("inlineCode",{parentName:"li"},"MySQL_Kube_Prom")," to the application dashboard")))}u.isMDXComponent=!0}}]);